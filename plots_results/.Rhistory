axis.text.x = element_text(angle = 0, hjust = 0.5),
legend.position = "bottom",
#legend.box = "vertical"  # Ensures stacked appearance
) +
scale_fill_brewer(
type = "qual",
palette = "Set2",
guide = guide_legend(
override.aes = list(pattern = 'none'),
nrow = 2  # 2 rows for the fill legend
),
labels = c("industry" = "ID", "oss_large" = expression("ODL"), "oss_similar" = expression("ODS"))
) +
ylim(0, 85) +
scale_pattern_manual(
values = c(
"None" = "none",
"Equally Balanced" = "stripe",
"Balanced Per Dataset" = "crosshatch",
"Weighted Loss" = "stripe"
),
guide = guide_legend(
override.aes = list(pattern_fill = 'grey', pattern_angle = c(0, 45, 45, -45)),
nrow = 2  # 2 rows for the pattern legend
)
) +
scale_x_discrete(labels = c(
"industry" = "ID",
"oss_similar" = expression("ODS"),
"oss_large" = expression("ODL")
))
ggsave("f1_all.pdf", width=16, height=6)
data <- read_delim("results_precision.csv", delim = ";", escape_double = FALSE, trim_ws = TRUE)
data
data <- read_delim("results_precision.csv", delim = ";", escape_double = FALSE, trim_ws = TRUE)
data
library(ggpattern)
data <- data %>%
mutate(
balanced_label = case_when(
balanced == "False" ~ "None",
balanced == "Equally" ~ "Equally Balanced",
balanced == "PerDataset" ~ "Balanced Per Dataset",
balanced == "WeightedLoss" ~ "Weighted Loss"
),
balanced_label = factor(balanced_label, levels = c(
"None", "Equally Balanced", "Balanced Per Dataset", "Weighted Loss"
)),
dataset_balanced = paste(dataset, balanced_label, sep = "_")
) %>%
mutate(
angle = case_when(
balanced_label == "None" ~ 0,
balanced_label == "Equally Balanced" ~ 45,
balanced_label == "Balanced Per Dataset" ~ 45,
balanced_label == "Weighted Loss" ~ -45
),
) %>%
mutate(f1 = f1 * 100)
# Plot
ggplot(data, aes(x = model, y = f1, fill = dataset, pattern = balanced_label, groups = interaction(balanced_label, angle))) +
geom_col_pattern(
pattern_angle = data$angle,
position = position_dodge(width = 0.9),
width = 0.8,
pattern_fill = "white",
pattern_colour = "white",
pattern_density = 0.05,
pattern_spacing = 0.015,
alpha = 0.7,
pattern_size = 0.4
) +
geom_text(
aes(label = as.character(round(f1, digits = 1))),
position = position_dodge(width = 0.9),
vjust = -0.3,
size = 4
) +
labs(
x = "Model",
y = "Precision",
fill = "Dataset",
pattern = "Balancing"
) +
theme_minimal(base_size = 24) +
theme(
axis.text.x = element_text(angle = 0, hjust = 0.5),
legend.position = "bottom",
#legend.box = "vertical"  # Ensures stacked appearance
) +
scale_fill_brewer(
type = "qual",
palette = "Set2",
guide = guide_legend(
override.aes = list(pattern = 'none'),
nrow = 2  # 2 rows for the fill legend
),
labels = c("industry" = "ID", "oss_large" = expression("ODL"), "oss_similar" = expression("ODS"))
) +
ylim(0, 85) +
scale_pattern_manual(
values = c(
"None" = "none",
"Equally Balanced" = "stripe",
"Balanced Per Dataset" = "crosshatch",
"Weighted Loss" = "stripe"
),
guide = guide_legend(
override.aes = list(pattern_fill = 'grey', pattern_angle = c(0, 45, 45, -45)),
nrow = 2  # 2 rows for the pattern legend
)
) +
scale_x_discrete(labels = c(
"industry" = "ID",
"oss_similar" = expression("ODS"),
"oss_large" = expression("ODL")
))
ggsave("precision_all.pdf", width=16, height=6)
data <- read_delim("results_recall.csv", delim = ";", escape_double = FALSE, trim_ws = TRUE)
data
library(ggpattern)
data <- data %>%
mutate(
balanced_label = case_when(
balanced == "False" ~ "None",
balanced == "Equally" ~ "Equally Balanced",
balanced == "PerDataset" ~ "Balanced Per Dataset",
balanced == "WeightedLoss" ~ "Weighted Loss"
),
balanced_label = factor(balanced_label, levels = c(
"None", "Equally Balanced", "Balanced Per Dataset", "Weighted Loss"
)),
dataset_balanced = paste(dataset, balanced_label, sep = "_")
) %>%
mutate(
angle = case_when(
balanced_label == "None" ~ 0,
balanced_label == "Equally Balanced" ~ 45,
balanced_label == "Balanced Per Dataset" ~ 45,
balanced_label == "Weighted Loss" ~ -45
),
) %>%
mutate(f1 = f1 * 100)
# Plot
ggplot(data, aes(x = model, y = f1, fill = dataset, pattern = balanced_label, groups = interaction(balanced_label, angle))) +
geom_col_pattern(
pattern_angle = data$angle,
position = position_dodge(width = 0.9),
width = 0.8,
pattern_fill = "white",
pattern_colour = "white",
pattern_density = 0.05,
pattern_spacing = 0.015,
alpha = 0.7,
pattern_size = 0.4
) +
geom_text(
aes(label = as.character(round(f1, digits = 1))),
position = position_dodge(width = 0.9),
vjust = -0.3,
size = 4
) +
labs(
x = "Model",
y = "Recall",
fill = "Dataset",
pattern = "Balancing"
) +
theme_minimal(base_size = 24) +
theme(
axis.text.x = element_text(angle = 0, hjust = 0.5),
legend.position = "bottom",
#legend.box = "vertical"  # Ensures stacked appearance
) +
scale_fill_brewer(
type = "qual",
palette = "Set2",
guide = guide_legend(
override.aes = list(pattern = 'none'),
nrow = 2  # 2 rows for the fill legend
),
labels = c("industry" = "ID", "oss_large" = expression("ODL"), "oss_similar" = expression("ODS"))
) +
ylim(0, 85) +
scale_pattern_manual(
values = c(
"None" = "none",
"Equally Balanced" = "stripe",
"Balanced Per Dataset" = "crosshatch",
"Weighted Loss" = "stripe"
),
guide = guide_legend(
override.aes = list(pattern_fill = 'grey', pattern_angle = c(0, 45, 45, -45)),
nrow = 2  # 2 rows for the pattern legend
)
) +
scale_x_discrete(labels = c(
"industry" = "ID",
"oss_similar" = expression("ODS"),
"oss_large" = expression("ODL")
))
ggsave("recall_all.pdf", width=16, height=6)
# Plot
ggplot(data, aes(x = model, y = f1, fill = dataset, pattern = balanced_label, groups = interaction(balanced_label, angle))) +
geom_col_pattern(
pattern_angle = data$angle,
position = position_dodge(width = 0.9),
width = 0.8,
pattern_fill = "white",
pattern_colour = "white",
pattern_density = 0.05,
pattern_spacing = 0.015,
alpha = 0.7,
pattern_size = 0.4
) +
geom_text(
aes(label = as.character(round(f1, digits = 1))),
position = position_dodge(width = 0.9),
vjust = -0.3,
size = 4
) +
labs(
x = "Model",
y = "Recall",
fill = "Dataset",
pattern = "Balancing"
) +
theme_minimal(base_size = 24) +
theme(
axis.text.x = element_text(angle = 0, hjust = 0.5),
legend.position = "bottom",
#legend.box = "vertical"  # Ensures stacked appearance
) +
scale_fill_brewer(
type = "qual",
palette = "Set2",
guide = guide_legend(
override.aes = list(pattern = 'none'),
nrow = 2  # 2 rows for the fill legend
),
labels = c("industry" = "ID", "oss_large" = expression("ODL"), "oss_similar" = expression("ODS"))
) +
ylim(0, 100) +
scale_pattern_manual(
values = c(
"None" = "none",
"Equally Balanced" = "stripe",
"Balanced Per Dataset" = "crosshatch",
"Weighted Loss" = "stripe"
),
guide = guide_legend(
override.aes = list(pattern_fill = 'grey', pattern_angle = c(0, 45, 45, -45)),
nrow = 2  # 2 rows for the pattern legend
)
) +
scale_x_discrete(labels = c(
"industry" = "ID",
"oss_similar" = expression("ODS"),
"oss_large" = expression("ODL")
))
data <- read_delim("results_recall.csv", delim = ";", escape_double = FALSE, trim_ws = TRUE)
data
library(ggpattern)
data <- data %>%
mutate(
balanced_label = case_when(
balanced == "False" ~ "None",
balanced == "Equally" ~ "Equally Balanced",
balanced == "PerDataset" ~ "Balanced Per Dataset",
balanced == "WeightedLoss" ~ "Weighted Loss"
),
balanced_label = factor(balanced_label, levels = c(
"None", "Equally Balanced", "Balanced Per Dataset", "Weighted Loss"
)),
dataset_balanced = paste(dataset, balanced_label, sep = "_")
) %>%
mutate(
angle = case_when(
balanced_label == "None" ~ 0,
balanced_label == "Equally Balanced" ~ 45,
balanced_label == "Balanced Per Dataset" ~ 45,
balanced_label == "Weighted Loss" ~ -45
),
) %>%
mutate(f1 = f1 * 100)
# Plot
ggplot(data, aes(x = model, y = f1, fill = dataset, pattern = balanced_label, groups = interaction(balanced_label, angle))) +
geom_col_pattern(
pattern_angle = data$angle,
position = position_dodge(width = 0.9),
width = 0.8,
pattern_fill = "white",
pattern_colour = "white",
pattern_density = 0.05,
pattern_spacing = 0.015,
alpha = 0.7,
pattern_size = 0.4
) +
geom_text(
aes(label = as.character(round(f1, digits = 1))),
position = position_dodge(width = 0.9),
vjust = -0.3,
size = 4
) +
labs(
x = "Model",
y = "Recall",
fill = "Dataset",
pattern = "Balancing"
) +
theme_minimal(base_size = 24) +
theme(
axis.text.x = element_text(angle = 0, hjust = 0.5),
legend.position = "bottom",
#legend.box = "vertical"  # Ensures stacked appearance
) +
scale_fill_brewer(
type = "qual",
palette = "Set2",
guide = guide_legend(
override.aes = list(pattern = 'none'),
nrow = 2  # 2 rows for the fill legend
),
labels = c("industry" = "ID", "oss_large" = expression("ODL"), "oss_similar" = expression("ODS"))
) +
ylim(0, 100) +
scale_pattern_manual(
values = c(
"None" = "none",
"Equally Balanced" = "stripe",
"Balanced Per Dataset" = "crosshatch",
"Weighted Loss" = "stripe"
),
guide = guide_legend(
override.aes = list(pattern_fill = 'grey', pattern_angle = c(0, 45, 45, -45)),
nrow = 2  # 2 rows for the pattern legend
)
) +
scale_x_discrete(labels = c(
"industry" = "ID",
"oss_similar" = expression("ODS"),
"oss_large" = expression("ODL")
))
ggsave("recall_all.pdf", width=16, height=6)
data <- read_delim("results_precision.csv", delim = ";", escape_double = FALSE, trim_ws = TRUE)
data
library(ggpattern)
data <- data %>%
mutate(
balanced_label = case_when(
balanced == "False" ~ "None",
balanced == "Equally" ~ "Equally Balanced",
balanced == "PerDataset" ~ "Balanced Per Dataset",
balanced == "WeightedLoss" ~ "Weighted Loss"
),
balanced_label = factor(balanced_label, levels = c(
"None", "Equally Balanced", "Balanced Per Dataset", "Weighted Loss"
)),
dataset_balanced = paste(dataset, balanced_label, sep = "_")
) %>%
mutate(
angle = case_when(
balanced_label == "None" ~ 0,
balanced_label == "Equally Balanced" ~ 45,
balanced_label == "Balanced Per Dataset" ~ 45,
balanced_label == "Weighted Loss" ~ -45
),
) %>%
mutate(f1 = f1 * 100)
# Plot
ggplot(data, aes(x = model, y = f1, fill = dataset, pattern = balanced_label, groups = interaction(balanced_label, angle))) +
geom_col_pattern(
pattern_angle = data$angle,
position = position_dodge(width = 0.9),
width = 0.8,
pattern_fill = "white",
pattern_colour = "white",
pattern_density = 0.05,
pattern_spacing = 0.015,
alpha = 0.7,
pattern_size = 0.4
) +
geom_text(
aes(label = as.character(round(f1, digits = 1))),
position = position_dodge(width = 0.9),
vjust = -0.3,
size = 4
) +
labs(
x = "Model",
y = "Precision",
fill = "Dataset",
pattern = "Balancing"
) +
theme_minimal(base_size = 24) +
theme(
axis.text.x = element_text(angle = 0, hjust = 0.5),
legend.position = "bottom",
#legend.box = "vertical"  # Ensures stacked appearance
) +
scale_fill_brewer(
type = "qual",
palette = "Set2",
guide = guide_legend(
override.aes = list(pattern = 'none'),
nrow = 2  # 2 rows for the fill legend
),
labels = c("industry" = "ID", "oss_large" = expression("ODL"), "oss_similar" = expression("ODS"))
) +
ylim(0, 100) +
scale_pattern_manual(
values = c(
"None" = "none",
"Equally Balanced" = "stripe",
"Balanced Per Dataset" = "crosshatch",
"Weighted Loss" = "stripe"
),
guide = guide_legend(
override.aes = list(pattern_fill = 'grey', pattern_angle = c(0, 45, 45, -45)),
nrow = 2  # 2 rows for the pattern legend
)
) +
scale_x_discrete(labels = c(
"industry" = "ID",
"oss_similar" = expression("ODS"),
"oss_large" = expression("ODL")
))
ggsave("precision_all.pdf", width=16, height=6)
data <- read_delim("results_f1.csv", delim = ";", escape_double = FALSE, trim_ws = TRUE)
data
library(ggpattern)
data <- data %>%
mutate(
balanced_label = case_when(
balanced == "False" ~ "None",
balanced == "Equally" ~ "Equally Balanced",
balanced == "PerDataset" ~ "Balanced Per Dataset",
balanced == "WeightedLoss" ~ "Weighted Loss"
),
balanced_label = factor(balanced_label, levels = c(
"None", "Equally Balanced", "Balanced Per Dataset", "Weighted Loss"
)),
dataset_balanced = paste(dataset, balanced_label, sep = "_")
) %>%
mutate(
angle = case_when(
balanced_label == "None" ~ 0,
balanced_label == "Equally Balanced" ~ 45,
balanced_label == "Balanced Per Dataset" ~ 45,
balanced_label == "Weighted Loss" ~ -45
),
) %>%
mutate(f1 = f1 * 100)
# Plot
ggplot(data, aes(x = model, y = f1, fill = dataset, pattern = balanced_label, groups = interaction(balanced_label, angle))) +
geom_col_pattern(
pattern_angle = data$angle,
position = position_dodge(width = 0.9),
width = 0.8,
pattern_fill = "white",
pattern_colour = "white",
pattern_density = 0.05,
pattern_spacing = 0.015,
alpha = 0.7,
pattern_size = 0.4
) +
geom_text(
aes(label = as.character(round(f1, digits = 1))),
position = position_dodge(width = 0.9),
vjust = -0.3,
size = 4
) +
labs(
x = "Model",
y = "F1 Score",
fill = "Dataset",
pattern = "Balancing"
) +
theme_minimal(base_size = 24) +
theme(
axis.text.x = element_text(angle = 0, hjust = 0.5),
legend.position = "bottom",
#legend.box = "vertical"  # Ensures stacked appearance
) +
scale_fill_brewer(
type = "qual",
palette = "Set2",
guide = guide_legend(
override.aes = list(pattern = 'none'),
nrow = 2  # 2 rows for the fill legend
),
labels = c("industry" = "ID", "oss_large" = expression("ODL"), "oss_similar" = expression("ODS"))
) +
ylim(0, 100) +
scale_pattern_manual(
values = c(
"None" = "none",
"Equally Balanced" = "stripe",
"Balanced Per Dataset" = "crosshatch",
"Weighted Loss" = "stripe"
),
guide = guide_legend(
override.aes = list(pattern_fill = 'grey', pattern_angle = c(0, 45, 45, -45)),
nrow = 2  # 2 rows for the pattern legend
)
) +
scale_x_discrete(labels = c(
"industry" = "ID",
"oss_similar" = expression("ODS"),
"oss_large" = expression("ODL")
))
ggsave("f1_all.pdf", width=16, height=6)
